{"ast":null,"code":"var _jsxFileName = \"/Users/dylanembry/Projects/crash-game/client/src/CrashGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = 'http://localhost:3001'; // Your server URL\n\nfunction CrashGame() {\n  _s();\n  const [balance, setBalance] = useState(1000);\n  const [bet, setBet] = useState(10);\n  const [multiplier, setMultiplier] = useState(1);\n  const [phase, setPhase] = useState('waiting');\n  const [countdown, setCountdown] = useState(10);\n  const [hasBet, setHasBet] = useState(false);\n  const canvasRef = useRef(null);\n  const timeRef = useRef(0);\n  const particlesRef = useRef([]);\n  const trailRef = useRef([]);\n  const socket = useRef(null);\n  useEffect(() => {\n    socket.current = io(SOCKET_URL);\n    socket.current.on('gameUpdate', data => {\n      setPhase(data.phase);\n      setMultiplier(data.multiplier);\n      setBalance(data.balance);\n      setCountdown(data.countdown || 0);\n    });\n    socket.current.on('multiplierUpdate', newMultiplier => {\n      setMultiplier(newMultiplier);\n      // Update canvas here (adapt your drawGraph to use server multiplier)\n      drawGraph(canvasRef.current.getContext('2d'));\n    });\n    socket.current.on('waitingPhase', ({\n      countdown\n    }) => {\n      setPhase('waiting');\n      setCountdown(countdown);\n      setHasBet(false); // Reset for new round\n      timeRef.current = 0;\n      trailRef.current = [];\n      particlesRef.current = [];\n    });\n    socket.current.on('gameStarted', () => {\n      setPhase('running');\n    });\n    socket.current.on('gameCrashed', ({\n      crashPoint\n    }) => {\n      setPhase('crashed');\n      alert(`Crashed at ${crashPoint.toFixed(2)}x!`);\n      // Handle loss if not cashed out\n    });\n    socket.current.on('balanceUpdate', newBalance => setBalance(newBalance));\n    socket.current.on('cashOutSuccess', ({\n      multiplier,\n      winnings\n    }) => {\n      alert(`Cashed out at ${multiplier.toFixed(2)}x! Won $${winnings.toFixed(2)}`);\n    });\n    return () => socket.current.disconnect();\n  }, []);\n  const placeBet = () => {\n    if (phase !== 'waiting' || bet > balance || bet <= 0 || hasBet) return;\n    socket.current.emit('placeBet', bet);\n    setHasBet(true);\n  };\n  const cashOut = () => {\n    if (phase !== 'running' || !hasBet) return;\n    socket.current.emit('cashOut');\n  };\n\n  // Adapt your drawGraph, updateParticles, etc., to use server-driven multiplier\n  // Remove local animation loop; trigger draws on 'multiplierUpdate'\n  const drawGraph = ctx => {\n    // Your existing draw code, but use multiplier from state\n    // For rocket position, derive from multiplier (e.g., inverse of your exp formula)\n    const time = Math.log(multiplier) / 0.5; // Approximate from your exp formula\n    const rocketY = 400 - Math.pow(Math.E, time * 0.5) * 100;\n    const rocketX = (Math.pow(Math.E, time * 0.5) - 1) * 100;\n\n    // Trail/particles as before...\n    // ...\n  };\n  useEffect(() => {\n    const ctx = canvasRef.current.getContext('2d');\n    drawGraph(ctx);\n  }, [multiplier, phase]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      fontFamily: 'Arial',\n      background: '#222',\n      color: '#fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px',\n        fontSize: '1.2em'\n      },\n      children: [\"Balance: $\", balance.toFixed(2), \" | Multiplier: \", multiplier.toFixed(2), \"x | Phase: \", phase, \" | \", phase === 'waiting' ? `Countdown: ${countdown}s` : '', phase === 'waiting' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Bet: $\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: bet,\n          min: \"1\",\n          max: balance,\n          style: {\n            width: '60px'\n          },\n          onChange: e => setBet(Math.max(1, Math.min(balance, parseFloat(e.target.value))))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 600,\n      height: 400,\n      style: {\n        border: '2px solid #fff',\n        background: '#333'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), phase === 'running' && hasBet && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: cashOut,\n      style: {/* your styles */},\n      children: \"Cash Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), phase === 'waiting' && !hasBet && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: placeBet,\n      style: {/* your styles */},\n      children: \"Place Bet & Join\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(CrashGame, \"bdjLtQMvlZYRihoktWg3xxmDfjQ=\");\n_c = CrashGame;\nexport default CrashGame;\nvar _c;\n$RefreshReg$(_c, \"CrashGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","Fragment","_Fragment","SOCKET_URL","CrashGame","_s","balance","setBalance","bet","setBet","multiplier","setMultiplier","phase","setPhase","countdown","setCountdown","hasBet","setHasBet","canvasRef","timeRef","particlesRef","trailRef","socket","current","on","data","newMultiplier","drawGraph","getContext","crashPoint","alert","toFixed","newBalance","winnings","disconnect","placeBet","emit","cashOut","ctx","time","Math","log","rocketY","pow","E","rocketX","style","display","flexDirection","alignItems","fontFamily","background","color","children","margin","fontSize","type","value","min","max","width","onChange","e","parseFloat","target","fileName","_jsxFileName","lineNumber","columnNumber","ref","height","border","onClick","_c","$RefreshReg$"],"sources":["/Users/dylanembry/Projects/crash-game/client/src/CrashGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\n\nconst SOCKET_URL = 'http://localhost:3001';  // Your server URL\n\nfunction CrashGame() {\n  const [balance, setBalance] = useState(1000);\n  const [bet, setBet] = useState(10);\n  const [multiplier, setMultiplier] = useState(1);\n  const [phase, setPhase] = useState('waiting');\n  const [countdown, setCountdown] = useState(10);\n  const [hasBet, setHasBet] = useState(false);\n  const canvasRef = useRef(null);\n  const timeRef = useRef(0);\n  const particlesRef = useRef([]);\n  const trailRef = useRef([]);\n  const socket = useRef(null);\n\n  useEffect(() => {\n    socket.current = io(SOCKET_URL);\n\n    socket.current.on('gameUpdate', (data) => {\n      setPhase(data.phase);\n      setMultiplier(data.multiplier);\n      setBalance(data.balance);\n      setCountdown(data.countdown || 0);\n    });\n\n    socket.current.on('multiplierUpdate', (newMultiplier) => {\n      setMultiplier(newMultiplier);\n      // Update canvas here (adapt your drawGraph to use server multiplier)\n      drawGraph(canvasRef.current.getContext('2d'));\n    });\n\n    socket.current.on('waitingPhase', ({ countdown }) => {\n      setPhase('waiting');\n      setCountdown(countdown);\n      setHasBet(false);  // Reset for new round\n      timeRef.current = 0;\n      trailRef.current = [];\n      particlesRef.current = [];\n    });\n\n    socket.current.on('gameStarted', () => {\n      setPhase('running');\n    });\n\n    socket.current.on('gameCrashed', ({ crashPoint }) => {\n      setPhase('crashed');\n      alert(`Crashed at ${crashPoint.toFixed(2)}x!`);\n      // Handle loss if not cashed out\n    });\n\n    socket.current.on('balanceUpdate', (newBalance) => setBalance(newBalance));\n    socket.current.on('cashOutSuccess', ({ multiplier, winnings }) => {\n      alert(`Cashed out at ${multiplier.toFixed(2)}x! Won $${winnings.toFixed(2)}`);\n    });\n\n    return () => socket.current.disconnect();\n  }, []);\n\n  const placeBet = () => {\n    if (phase !== 'waiting' || bet > balance || bet <= 0 || hasBet) return;\n    socket.current.emit('placeBet', bet);\n    setHasBet(true);\n  };\n\n  const cashOut = () => {\n    if (phase !== 'running' || !hasBet) return;\n    socket.current.emit('cashOut');\n  };\n\n  // Adapt your drawGraph, updateParticles, etc., to use server-driven multiplier\n  // Remove local animation loop; trigger draws on 'multiplierUpdate'\n  const drawGraph = (ctx) => {\n    // Your existing draw code, but use multiplier from state\n    // For rocket position, derive from multiplier (e.g., inverse of your exp formula)\n    const time = Math.log(multiplier) / 0.5;  // Approximate from your exp formula\n    const rocketY = 400 - (Math.pow(Math.E, time * 0.5) * 100);\n    const rocketX = (Math.pow(Math.E, time * 0.5) - 1) * 100;\n\n    // Trail/particles as before...\n    // ...\n  };\n\n  useEffect(() => {\n    const ctx = canvasRef.current.getContext('2d');\n    drawGraph(ctx);\n  }, [multiplier, phase]);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', fontFamily: 'Arial', background: '#222', color: '#fff' }}>\n      <div style={{ margin: '10px', fontSize: '1.2em' }}>\n        Balance: ${balance.toFixed(2)} | Multiplier: {multiplier.toFixed(2)}x | Phase: {phase} | {phase === 'waiting' ? `Countdown: ${countdown}s` : ''}\n        {phase === 'waiting' && (\n          <>\n            Bet: $\n            <input\n              type=\"number\"\n              value={bet}\n              min=\"1\"\n              max={balance}\n              style={{ width: '60px' }}\n              onChange={(e) => setBet(Math.max(1, Math.min(balance, parseFloat(e.target.value))))}\n            />\n          </>\n        )}\n      </div>\n      <canvas ref={canvasRef} width={600} height={400} style={{ border: '2px solid #fff', background: '#333' }} />\n      {phase === 'running' && hasBet && (\n        <button onClick={cashOut} style={{ /* your styles */ }}>\n          Cash Out\n        </button>\n      )}\n      {phase === 'waiting' && !hasBet && (\n        <button onClick={placeBet} style={{ /* your styles */ }}>\n          Place Bet & Join\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default CrashGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}