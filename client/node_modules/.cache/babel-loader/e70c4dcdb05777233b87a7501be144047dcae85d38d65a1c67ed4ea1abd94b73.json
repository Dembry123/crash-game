{"ast":null,"code":"var _jsxFileName = \"/Users/dylanembry/Projects/crash-game/client/src/CrashGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = 'http://localhost:3001';\nfunction CrashGame() {\n  _s();\n  const [balance, setBalance] = useState(1000);\n  const [bet, setBet] = useState(10);\n  const [multiplier, setMultiplier] = useState(1);\n  const [phase, setPhase] = useState('waiting');\n  const [countdown, setCountdown] = useState(10);\n  const [hasBet, setHasBet] = useState(false);\n  const canvasRef = useRef(null);\n  const timeRef = useRef(0);\n  const particlesRef = useRef([]);\n  const trailRef = useRef([]);\n  const socket = useRef(null);\n  const lastMultiplierRef = useRef(1);\n  const lastUpdateTimeRef = useRef(Date.now());\n  const CANVAS_WIDTH = 1200;\n  const CANVAS_HEIGHT = 800;\n  const SCALE = 2; // Scaling factor for sizes, speeds, etc.\n\n  const updateParticles = useCallback((rocketX, rocketY) => {\n    if (phase === 'running' && particlesRef.current.length < 200) {\n      // Doubled max particles\n      for (let i = 0; i < 4; i++) {\n        // Doubled creation rate for density\n        particlesRef.current.push({\n          x: rocketX + (Math.random() - 0.5) * 20,\n          y: rocketY + 20,\n          vx: (Math.random() - 0.5) * 4,\n          vy: 2 + Math.random() * 4,\n          life: 1.0\n        });\n      }\n    }\n    particlesRef.current.forEach(p => {\n      p.x += p.vx;\n      p.y += p.vy;\n      p.life -= 0.02;\n      if (p.life < 0) console.warn('Negative life detected:', p.life);\n    });\n    particlesRef.current = particlesRef.current.filter(p => p.life > 0);\n  }, [phase]);\n  useEffect(() => {\n    socket.current = io(SOCKET_URL);\n    socket.current.on('gameUpdate', data => {\n      setPhase(data.phase);\n      setMultiplier(data.multiplier);\n      setBalance(data.balance);\n      setCountdown(data.countdown || 0);\n    });\n    socket.current.on('multiplierUpdate', newMultiplier => {\n      setMultiplier(newMultiplier);\n      lastMultiplierRef.current = newMultiplier;\n      lastUpdateTimeRef.current = Date.now();\n    });\n    socket.current.on('waitingPhase', ({\n      countdown\n    }) => {\n      setPhase('waiting');\n      setCountdown(countdown);\n      setHasBet(false); // Reset for new round\n      timeRef.current = 0;\n      trailRef.current = [];\n      particlesRef.current = [];\n    });\n    socket.current.on('gameStarted', () => {\n      setPhase('running');\n    });\n    socket.current.on('gameCrashed', ({\n      crashPoint\n    }) => {\n      setPhase('crashed');\n      alert(`Crashed at ${crashPoint.toFixed(2)}x!`);\n      // Handle loss if not cashed out\n    });\n    socket.current.on('balanceUpdate', newBalance => setBalance(newBalance));\n    socket.current.on('cashOutSuccess', ({\n      multiplier,\n      winnings\n    }) => {\n      alert(`Cashed out at ${multiplier.toFixed(2)}x! Won $${winnings.toFixed(2)}`);\n    });\n    return () => socket.current.disconnect();\n  }, []);\n  const placeBet = () => {\n    if (phase !== 'waiting' || bet > balance || bet <= 0 || hasBet) return;\n    socket.current.emit('placeBet', bet);\n    setHasBet(true);\n  };\n  const cashOut = () => {\n    if (phase !== 'running' || !hasBet) return;\n    socket.current.emit('cashOut');\n  };\n  useEffect(() => {\n    let frameId;\n    const animate = () => {\n      var _trailRef$current;\n      if (!canvasRef.current) return;\n      const ctx = canvasRef.current.getContext('2d');\n\n      // Interpolate multiplier for smoothness (assume ~0.01 increase per 100ms from server)\n      const now = Date.now();\n      const timeSinceLastUpdate = (now - lastUpdateTimeRef.current) / 1000; // in seconds\n      const estimatedMultiplier = lastMultiplierRef.current + timeSinceLastUpdate * 0.1; // Adjust 0.1 based on your server's increment rate (0.01 every 100ms = 0.1 per second)\n\n      // Use estimatedMultiplier for position calc to make it feel continuous\n      let time = Math.log(estimatedMultiplier) / 0.5;\n      const rocketY = CANVAS_HEIGHT - (Math.pow(Math.E, time * 0.5) - 1) * (CANVAS_HEIGHT / 4);\n      const rocketX = (Math.pow(Math.E, time * 0.5) - 1) * (CANVAS_WIDTH / 6);\n\n      // Clear and draw axes\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.beginPath();\n      ctx.moveTo(0, CANVAS_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.moveTo(0, CANVAS_HEIGHT);\n      ctx.lineTo(0, 0);\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = SCALE;\n      ctx.stroke();\n\n      // Particles draw\n      particlesRef.current.forEach(p => {\n        ctx.beginPath();\n        ctx.arc(p.x, p.y, Math.max(0, 6 * p.life), 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(255, 128, 0, ${Math.max(0, p.life)})`;\n        ctx.fill();\n      });\n\n      // Trail: Only push every ~100ms to avoid bloat, but draw always\n      if (phase === 'running' && now - (((_trailRef$current = trailRef.current[trailRef.current.length - 1]) === null || _trailRef$current === void 0 ? void 0 : _trailRef$current.timestamp) || 0) > 100) {\n        trailRef.current.push({\n          x: rocketX,\n          y: rocketY,\n          timestamp: now\n        });\n        if (trailRef.current.length > 400) trailRef.current.shift(); // Doubled cap\n      }\n      ctx.beginPath();\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = 4;\n      trailRef.current.forEach((point, i) => {\n        if (i === 0) ctx.moveTo(point.x, point.y);else ctx.lineTo(point.x, point.y);\n      });\n      ctx.stroke();\n\n      // Rocket draw\n      if (phase !== 'crashed') {\n        ctx.beginPath();\n        ctx.arc(rocketX, rocketY, 10, 0, Math.PI * 2);\n        ctx.fillStyle = '#fff';\n        ctx.fill();\n      }\n\n      // Particle updates: Run every frame for smoothness, but create fewer\n      if (phase === 'running') {\n        updateParticles(rocketX, rocketY); // Your existing function\n      }\n\n      // Crashed explosion (unchanged, but runs every frame until particles fade)\n      if (phase === 'crashed') {\n        if (particlesRef.current.length < 400) {\n          // Doubled max, burst more for density\n          for (let i = 0; i < 100; i++) {\n            particlesRef.current.push({\n              x: rocketX + (Math.random() - 0.5) * 40,\n              y: rocketY + (Math.random() - 0.5) * 40,\n              vx: (Math.random() - 0.5) * 10,\n              vy: (Math.random() - 0.5) * 10,\n              life: 1.0\n            });\n          }\n        }\n        particlesRef.current.forEach(p => {\n          p.x += p.vx;\n          p.y += p.vy;\n          p.life -= 0.02;\n        });\n        particlesRef.current = particlesRef.current.filter(p => p.life > 0);\n      }\n      frameId = requestAnimationFrame(animate);\n    };\n    if (phase === 'running' || phase === 'crashed') {\n      // Only animate during active phases\n      animate();\n    }\n    return () => cancelAnimationFrame(frameId);\n  }, [phase, updateParticles]); // Restart loop on phase change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      fontFamily: 'Arial',\n      background: '#222',\n      color: '#fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px',\n        fontSize: '1.2em'\n      },\n      children: [\"Balance: $\", balance.toFixed(2), \" | Multiplier: \", multiplier.toFixed(2), \"x | Phase: \", phase, \" | \", phase === 'waiting' ? `Countdown: ${countdown}s` : '', phase === 'waiting' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Bet: $\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: bet,\n          min: \"1\",\n          max: balance,\n          style: {\n            width: '60px'\n          },\n          onChange: e => setBet(Math.max(1, Math.min(balance, parseFloat(e.target.value))))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: CANVAS_WIDTH,\n      height: CANVAS_HEIGHT,\n      style: {\n        border: '2px solid #fff',\n        background: '#333'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), phase === 'running' && hasBet && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: cashOut,\n      style: {\n        padding: '10px 20px',\n        margin: '10px',\n        fontSize: '1em',\n        cursor: 'pointer',\n        background: '#28a745',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '5px'\n      },\n      children: \"Cash Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), phase === 'waiting' && !hasBet && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: placeBet,\n      style: {\n        padding: '10px 20px',\n        margin: '10px',\n        fontSize: '1em',\n        cursor: 'pointer',\n        background: '#007bff',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '5px'\n      },\n      children: \"Place Bet & Join\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n_s(CrashGame, \"+iQjG4RmHdHL25bE2OiYZ9/EFLY=\");\n_c = CrashGame;\nexport default CrashGame;\nvar _c;\n$RefreshReg$(_c, \"CrashGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","io","jsxDEV","_jsxDEV","Fragment","_Fragment","SOCKET_URL","CrashGame","_s","balance","setBalance","bet","setBet","multiplier","setMultiplier","phase","setPhase","countdown","setCountdown","hasBet","setHasBet","canvasRef","timeRef","particlesRef","trailRef","socket","lastMultiplierRef","lastUpdateTimeRef","Date","now","CANVAS_WIDTH","CANVAS_HEIGHT","SCALE","updateParticles","rocketX","rocketY","current","length","i","push","x","Math","random","y","vx","vy","life","forEach","p","console","warn","filter","on","data","newMultiplier","crashPoint","alert","toFixed","newBalance","winnings","disconnect","placeBet","emit","cashOut","frameId","animate","_trailRef$current","ctx","getContext","timeSinceLastUpdate","estimatedMultiplier","time","log","pow","E","clearRect","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","arc","max","PI","fillStyle","fill","timestamp","shift","point","requestAnimationFrame","cancelAnimationFrame","style","display","flexDirection","alignItems","fontFamily","background","color","children","margin","fontSize","type","value","min","width","onChange","e","parseFloat","target","fileName","_jsxFileName","lineNumber","columnNumber","ref","height","border","onClick","padding","cursor","borderRadius","_c","$RefreshReg$"],"sources":["/Users/dylanembry/Projects/crash-game/client/src/CrashGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport io from 'socket.io-client';\n\nconst SOCKET_URL = 'http://localhost:3001';\n\nfunction CrashGame() {\n  const [balance, setBalance] = useState(1000);\n  const [bet, setBet] = useState(10);\n  const [multiplier, setMultiplier] = useState(1);\n  const [phase, setPhase] = useState('waiting');\n  const [countdown, setCountdown] = useState(10);\n  const [hasBet, setHasBet] = useState(false);\n  const canvasRef = useRef(null);\n  const timeRef = useRef(0);\n  const particlesRef = useRef([]);\n  const trailRef = useRef([]);\n  const socket = useRef(null);\n  const lastMultiplierRef = useRef(1);\n  const lastUpdateTimeRef = useRef(Date.now());\n\n  const CANVAS_WIDTH = 1200;\n  const CANVAS_HEIGHT = 800;\n  const SCALE = 2; // Scaling factor for sizes, speeds, etc.\n\n  const updateParticles = useCallback((rocketX, rocketY) => {\n    if (phase === 'running' && particlesRef.current.length < 200) { // Doubled max particles\n      for (let i = 0; i < 4; i++) { // Doubled creation rate for density\n        particlesRef.current.push({\n          x: rocketX + (Math.random() - 0.5) * 20,\n          y: rocketY + 20,\n          vx: (Math.random() - 0.5) * 4,\n          vy: 2 + Math.random() * 4,\n          life: 1.0,\n        });\n      }\n    }\n    particlesRef.current.forEach(p => {\n      p.x += p.vx;\n      p.y += p.vy;\n      p.life -= 0.02;\n      if (p.life < 0) console.warn('Negative life detected:', p.life);\n    });\n    particlesRef.current = particlesRef.current.filter(p => p.life > 0);\n  }, [phase]);\n\n  useEffect(() => {\n    socket.current = io(SOCKET_URL);\n\n    socket.current.on('gameUpdate', (data) => {\n      setPhase(data.phase);\n      setMultiplier(data.multiplier);\n      setBalance(data.balance);\n      setCountdown(data.countdown || 0);\n    });\n\n    socket.current.on('multiplierUpdate', (newMultiplier) => {\n      setMultiplier(newMultiplier);\n      lastMultiplierRef.current = newMultiplier;\n      lastUpdateTimeRef.current = Date.now();\n    });\n\n    socket.current.on('waitingPhase', ({ countdown }) => {\n      setPhase('waiting');\n      setCountdown(countdown);\n      setHasBet(false);  // Reset for new round\n      timeRef.current = 0;\n      trailRef.current = [];\n      particlesRef.current = [];\n    });\n\n    socket.current.on('gameStarted', () => {\n      setPhase('running');\n    });\n\n    socket.current.on('gameCrashed', ({ crashPoint }) => {\n      setPhase('crashed');\n      alert(`Crashed at ${crashPoint.toFixed(2)}x!`);\n      // Handle loss if not cashed out\n    });\n\n    socket.current.on('balanceUpdate', (newBalance) => setBalance(newBalance));\n    socket.current.on('cashOutSuccess', ({ multiplier, winnings }) => {\n      alert(`Cashed out at ${multiplier.toFixed(2)}x! Won $${winnings.toFixed(2)}`);\n    });\n\n    return () => socket.current.disconnect();\n  }, []);\n\n  const placeBet = () => {\n    if (phase !== 'waiting' || bet > balance || bet <= 0 || hasBet) return;\n    socket.current.emit('placeBet', bet);\n    setHasBet(true);\n  };\n\n  const cashOut = () => {\n    if (phase !== 'running' || !hasBet) return;\n    socket.current.emit('cashOut');\n  };\n\n  useEffect(() => {\n  let frameId;\n  const animate = () => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d');\n\n    // Interpolate multiplier for smoothness (assume ~0.01 increase per 100ms from server)\n    const now = Date.now();\n    const timeSinceLastUpdate = (now - lastUpdateTimeRef.current) / 1000;  // in seconds\n    const estimatedMultiplier = lastMultiplierRef.current + (timeSinceLastUpdate * 0.1);  // Adjust 0.1 based on your server's increment rate (0.01 every 100ms = 0.1 per second)\n\n    // Use estimatedMultiplier for position calc to make it feel continuous\n    let time = Math.log(estimatedMultiplier) / 0.5;\nconst rocketY = CANVAS_HEIGHT - (Math.pow(Math.E, time * 0.5) - 1) * (CANVAS_HEIGHT / 4);\nconst rocketX = (Math.pow(Math.E, time * 0.5) - 1) * (CANVAS_WIDTH / 6);\n\n    // Clear and draw axes\n    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    ctx.beginPath();\n    ctx.moveTo(0, CANVAS_HEIGHT);\n    ctx.lineTo(CANVAS_WIDTH, CANVAS_HEIGHT);\n    ctx.moveTo(0, CANVAS_HEIGHT);\n    ctx.lineTo(0, 0);\n    ctx.strokeStyle = '#fff';\n    ctx.lineWidth = SCALE;\n    ctx.stroke();\n\n    // Particles draw\n    particlesRef.current.forEach(p => {\n      ctx.beginPath();\n      ctx.arc(p.x, p.y, Math.max(0, 6 * p.life), 0, Math.PI * 2);\n      ctx.fillStyle = `rgba(255, 128, 0, ${Math.max(0, p.life)})`;\n      ctx.fill();\n    });\n\n    // Trail: Only push every ~100ms to avoid bloat, but draw always\n    if (phase === 'running' && (now - (trailRef.current[trailRef.current.length - 1]?.timestamp || 0) > 100)) {\n      trailRef.current.push({ x: rocketX, y: rocketY, timestamp: now });\n      if (trailRef.current.length > 400) trailRef.current.shift();  // Doubled cap\n    }\n    ctx.beginPath();\n    ctx.strokeStyle = '#fff';\n    ctx.lineWidth = 4;\n    trailRef.current.forEach((point, i) => {\n      if (i === 0) ctx.moveTo(point.x, point.y);\n      else ctx.lineTo(point.x, point.y);\n    });\n    ctx.stroke();\n\n    // Rocket draw\n    if (phase !== 'crashed') {\n      ctx.beginPath();\n      ctx.arc(rocketX, rocketY, 10, 0, Math.PI * 2);\n      ctx.fillStyle = '#fff';\n      ctx.fill();\n    }\n\n    // Particle updates: Run every frame for smoothness, but create fewer\n    if (phase === 'running') {\n      updateParticles(rocketX, rocketY);  // Your existing function\n    }\n\n    // Crashed explosion (unchanged, but runs every frame until particles fade)\n    if (phase === 'crashed') {\n      if (particlesRef.current.length < 400) {  // Doubled max, burst more for density\n        for (let i = 0; i < 100; i++) {\n          particlesRef.current.push({\n            x: rocketX + (Math.random() - 0.5) * 40,\n            y: rocketY + (Math.random() - 0.5) * 40,\n            vx: (Math.random() - 0.5) * 10,\n            vy: (Math.random() - 0.5) * 10,\n            life: 1.0,\n          });\n        }\n      }\n      particlesRef.current.forEach(p => {\n        p.x += p.vx;\n        p.y += p.vy;\n        p.life -= 0.02;\n      });\n      particlesRef.current = particlesRef.current.filter(p => p.life > 0);\n    }\n\n    frameId = requestAnimationFrame(animate);\n  };\n\n  if (phase === 'running' || phase === 'crashed') {  // Only animate during active phases\n    animate();\n  }\n\n  return () => cancelAnimationFrame(frameId);\n}, [phase, updateParticles]);  // Restart loop on phase change\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', fontFamily: 'Arial', background: '#222', color: '#fff' }}>\n      <div style={{ margin: '10px', fontSize: '1.2em' }}>\n        Balance: ${balance.toFixed(2)} | Multiplier: {multiplier.toFixed(2)}x | Phase: {phase} | {phase === 'waiting' ? `Countdown: ${countdown}s` : ''}\n        {phase === 'waiting' && (\n          <>\n            Bet: $\n            <input\n              type=\"number\"\n              value={bet}\n              min=\"1\"\n              max={balance}\n              style={{ width: '60px' }}\n              onChange={(e) => setBet(Math.max(1, Math.min(balance, parseFloat(e.target.value))))}\n            />\n          </>\n        )}\n      </div>\n      <canvas ref={canvasRef} width={CANVAS_WIDTH} height={CANVAS_HEIGHT} style={{ border: '2px solid #fff', background: '#333' }} />\n      {phase === 'running' && hasBet && (\n        <button onClick={cashOut} style={{\n          padding: '10px 20px',\n          margin: '10px',\n          fontSize: '1em',\n          cursor: 'pointer',\n          background: '#28a745',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '5px',\n        }}>\n          Cash Out\n        </button>\n      )}\n      {phase === 'waiting' && !hasBet && (\n        <button onClick={placeBet} style={{\n          padding: '10px 20px',\n          margin: '10px',\n          fontSize: '1em',\n          cursor: 'pointer',\n          background: '#007bff',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '5px',\n        }}>\n          Place Bet & Join\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default CrashGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}