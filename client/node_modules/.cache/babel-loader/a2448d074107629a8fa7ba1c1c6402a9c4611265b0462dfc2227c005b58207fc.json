{"ast":null,"code":"useEffect(() => {\n  let frameId;\n  const animate = () => {\n    var _trailRef$current;\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d');\n    let estimatedMultiplier = multiplier;\n    let worldX = 0;\n    let worldY = 0;\n    if (phase === 'running') {\n      const now = Date.now();\n      const timeSinceLastUpdate = (now - lastUpdateTimeRef.current) / 1000;\n      estimatedMultiplier = lastMultiplierRef.current + timeSinceLastUpdate * 0.1;\n    }\n    const t = estimatedMultiplier - 1;\n    worldX = t * FACTOR_X;\n    worldY = Math.pow(t, 1.5) * (FACTOR_Y / 2);\n    let zoomScale = 1;\n    if (worldX > 0 && worldY > 0) {\n      const scaleX = (CANVAS_WIDTH - MARGIN) / worldX;\n      const scaleY = (CANVAS_HEIGHT - MARGIN) / worldY;\n      zoomScale = Math.min(1, Math.min(scaleX, scaleY));\n    }\n    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    ctx.beginPath();\n    ctx.moveTo(0, CANVAS_HEIGHT);\n    ctx.lineTo(CANVAS_WIDTH, CANVAS_HEIGHT);\n    ctx.moveTo(0, CANVAS_HEIGHT);\n    ctx.lineTo(0, 0);\n    ctx.strokeStyle = '#fff';\n    ctx.lineWidth = SCALE * zoomScale;\n    ctx.stroke();\n    if (phase === 'running' && Date.now() - (((_trailRef$current = trailRef.current[trailRef.current.length - 1]) === null || _trailRef$current === void 0 ? void 0 : _trailRef$current.timestamp) || 0) > 100) {\n      trailRef.current.push({\n        worldX,\n        worldY,\n        timestamp: Date.now()\n      });\n    }\n    ctx.beginPath();\n    ctx.strokeStyle = '#fff';\n    ctx.lineWidth = 4 * zoomScale;\n    trailRef.current.forEach((point, i) => {\n      const drawX = point.worldX * zoomScale;\n      const drawY = CANVAS_HEIGHT - point.worldY * zoomScale;\n      if (i === 0) ctx.moveTo(drawX, drawY);else ctx.lineTo(drawX, drawY);\n    });\n    ctx.stroke();\n    if (phase === 'running') {\n      const drawRocketX = worldX * zoomScale;\n      const drawRocketY = CANVAS_HEIGHT - worldY * zoomScale;\n      ctx.beginPath();\n      ctx.arc(drawRocketX, drawRocketY, 10 * zoomScale, 0, Math.PI * 2);\n      ctx.fillStyle = '#fff';\n      ctx.fill();\n    }\n    particlesRef.current.forEach(p => {\n      const drawX = p.worldX * zoomScale;\n      const drawY = CANVAS_HEIGHT - p.worldY * zoomScale;\n      ctx.beginPath();\n      ctx.arc(drawX, drawY, Math.max(0, 6 * p.life) * zoomScale, 0, Math.PI * 2);\n      ctx.fillStyle = `rgba(255, 128, 0, ${Math.max(0, p.life)})`;\n      ctx.fill();\n    });\n    if (phase === 'running') {\n      updateParticles(worldX, worldY);\n    }\n    particlesRef.current.forEach(p => {\n      p.worldX += p.vx;\n      p.worldY += p.vy;\n      p.life -= 0.02;\n    });\n    particlesRef.current = particlesRef.current.filter(p => p.life > 0);\n\n    // Draw recent crash cards\n    const cardWidth = 42;\n    const cardHeight = 17.5;\n    const spacing = 7;\n    const marginRight = 7;\n    const marginTop = 7;\n    const numCards = recentCrashes.length;\n    const totalWidth = numCards * cardWidth + (numCards - 1) * spacing;\n    let startX = CANVAS_WIDTH - totalWidth - marginRight;\n    for (let i = 0; i < numCards; i++) {\n      const x = startX + i * (cardWidth + spacing);\n      const y = marginTop;\n      ctx.fillStyle = 'white';\n      ctx.fillRect(x, y, cardWidth, cardHeight);\n      ctx.strokeStyle = 'orange';\n      ctx.lineWidth = 1.4;\n      ctx.strokeRect(x, y, cardWidth, cardHeight);\n      const multi = recentCrashes[i];\n      const text = `${multi.toFixed(2)}x`;\n      ctx.font = '10px Arial';\n      ctx.fillStyle = 'green';\n      const textWidth = ctx.measureText(text).width;\n      ctx.fillText(text, x + (cardWidth - textWidth) / 2, y + cardHeight / 2 + 3.5);\n    }\n    frameId = requestAnimationFrame(animate);\n  };\n  frameId = requestAnimationFrame(animate);\n  return () => cancelAnimationFrame(frameId);\n}, [phase, multiplier, updateParticles, recentCrashes, FACTOR_X, FACTOR_Y]);\n/*\n * FIX: Added FACTOR_X and FACTOR_Y to the dependency array to satisfy the react-hooks/exhaustive-deps rule.\n * These constants are used in the effect to calculate worldX and worldY. Including them ensures the effect\n * would re-run if their values were to change (though they are constants and won't change in this case).\n * This change eliminates the ESLint warning while maintaining the same functionality.\n */","map":{"version":3,"names":["useEffect","frameId","animate","_trailRef$current","canvasRef","current","ctx","getContext","estimatedMultiplier","multiplier","worldX","worldY","phase","now","Date","timeSinceLastUpdate","lastUpdateTimeRef","lastMultiplierRef","t","FACTOR_X","Math","pow","FACTOR_Y","zoomScale","scaleX","CANVAS_WIDTH","MARGIN","scaleY","CANVAS_HEIGHT","min","clearRect","beginPath","moveTo","lineTo","strokeStyle","lineWidth","SCALE","stroke","trailRef","length","timestamp","push","forEach","point","i","drawX","drawY","drawRocketX","drawRocketY","arc","PI","fillStyle","fill","particlesRef","p","max","life","updateParticles","vx","vy","filter","cardWidth","cardHeight","spacing","marginRight","marginTop","numCards","recentCrashes","totalWidth","startX","x","y","fillRect","strokeRect","multi","text","toFixed","font","textWidth","measureText","width","fillText","requestAnimationFrame","cancelAnimationFrame"],"sources":["/Users/dylanembry/Projects/crash-game/client/src/CrashGame.js"],"sourcesContent":["useEffect(() => {\n  let frameId;\n  const animate = () => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d');\n\n    let estimatedMultiplier = multiplier;\n    let worldX = 0;\n    let worldY = 0;\n\n    if (phase === 'running') {\n      const now = Date.now();\n      const timeSinceLastUpdate = (now - lastUpdateTimeRef.current) / 1000;\n      estimatedMultiplier = lastMultiplierRef.current + (timeSinceLastUpdate * 0.1);\n    }\n\n    const t = estimatedMultiplier - 1;\n    worldX = t * FACTOR_X;\n    worldY = Math.pow(t, 1.5) * (FACTOR_Y / 2);\n\n    let zoomScale = 1;\n    if (worldX > 0 && worldY > 0) {\n      const scaleX = (CANVAS_WIDTH - MARGIN) / worldX;\n      const scaleY = (CANVAS_HEIGHT - MARGIN) / worldY;\n      zoomScale = Math.min(1, Math.min(scaleX, scaleY));\n    }\n\n    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    ctx.beginPath();\n    ctx.moveTo(0, CANVAS_HEIGHT);\n    ctx.lineTo(CANVAS_WIDTH, CANVAS_HEIGHT);\n    ctx.moveTo(0, CANVAS_HEIGHT);\n    ctx.lineTo(0, 0);\n    ctx.strokeStyle = '#fff';\n    ctx.lineWidth = SCALE * zoomScale;\n    ctx.stroke();\n\n    if (phase === 'running' && (Date.now() - (trailRef.current[trailRef.current.length - 1]?.timestamp || 0) > 100)) {\n      trailRef.current.push({ worldX, worldY, timestamp: Date.now() });\n    }\n    ctx.beginPath();\n    ctx.strokeStyle = '#fff';\n    ctx.lineWidth = 4 * zoomScale;\n    trailRef.current.forEach((point, i) => {\n      const drawX = point.worldX * zoomScale;\n      const drawY = CANVAS_HEIGHT - point.worldY * zoomScale;\n      if (i === 0) ctx.moveTo(drawX, drawY);\n      else ctx.lineTo(drawX, drawY);\n    });\n    ctx.stroke();\n\n    if (phase === 'running') {\n      const drawRocketX = worldX * zoomScale;\n      const drawRocketY = CANVAS_HEIGHT - worldY * zoomScale;\n      ctx.beginPath();\n      ctx.arc(drawRocketX, drawRocketY, 10 * zoomScale, 0, Math.PI * 2);\n      ctx.fillStyle = '#fff';\n      ctx.fill();\n    }\n\n    particlesRef.current.forEach(p => {\n      const drawX = p.worldX * zoomScale;\n      const drawY = CANVAS_HEIGHT - p.worldY * zoomScale;\n      ctx.beginPath();\n      ctx.arc(drawX, drawY, Math.max(0, 6 * p.life) * zoomScale, 0, Math.PI * 2);\n      ctx.fillStyle = `rgba(255, 128, 0, ${Math.max(0, p.life)})`;\n      ctx.fill();\n    });\n\n    if (phase === 'running') {\n      updateParticles(worldX, worldY);\n    }\n\n    particlesRef.current.forEach(p => {\n      p.worldX += p.vx;\n      p.worldY += p.vy;\n      p.life -= 0.02;\n    });\n    particlesRef.current = particlesRef.current.filter(p => p.life > 0);\n\n    // Draw recent crash cards\n    const cardWidth = 42;\n    const cardHeight = 17.5;\n    const spacing = 7;\n    const marginRight = 7;\n    const marginTop = 7;\n    const numCards = recentCrashes.length;\n    const totalWidth = numCards * cardWidth + (numCards - 1) * spacing;\n    let startX = CANVAS_WIDTH - totalWidth - marginRight;\n    for (let i = 0; i < numCards; i++) {\n      const x = startX + i * (cardWidth + spacing);\n      const y = marginTop;\n      ctx.fillStyle = 'white';\n      ctx.fillRect(x, y, cardWidth, cardHeight);\n      ctx.strokeStyle = 'orange';\n      ctx.lineWidth = 1.4;\n      ctx.strokeRect(x, y, cardWidth, cardHeight);\n      const multi = recentCrashes[i];\n      const text = `${multi.toFixed(2)}x`;\n      ctx.font = '10px Arial';\n      ctx.fillStyle = 'green';\n      const textWidth = ctx.measureText(text).width;\n      ctx.fillText(text, x + (cardWidth - textWidth)/2, y + cardHeight/2 + 3.5);\n    }\n\n    frameId = requestAnimationFrame(animate);\n  };\n\n  frameId = requestAnimationFrame(animate);\n\n  return () => cancelAnimationFrame(frameId);\n}, [phase, multiplier, updateParticles, recentCrashes, FACTOR_X, FACTOR_Y]);\n/*\n * FIX: Added FACTOR_X and FACTOR_Y to the dependency array to satisfy the react-hooks/exhaustive-deps rule.\n * These constants are used in the effect to calculate worldX and worldY. Including them ensures the effect\n * would re-run if their values were to change (though they are constants and won't change in this case).\n * This change eliminates the ESLint warning while maintaining the same functionality.\n */"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}