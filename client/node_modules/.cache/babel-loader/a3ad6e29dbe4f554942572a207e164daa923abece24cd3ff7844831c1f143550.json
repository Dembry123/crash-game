{"ast":null,"code":"var _jsxFileName = \"/Users/dylanembry/Projects/crash-game/client/src/CrashGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport CryptoJS from 'crypto-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = 'http://localhost:3001';\nfunction CrashGame() {\n  _s();\n  const [balance, setBalance] = useState(1000);\n  const [bet, setBet] = useState(10);\n  const [maxMultiplier, setMaxMultiplier] = useState(2); // New state for max multiplier\n  const [multiplier, setMultiplier] = useState(1);\n  const [phase, setPhase] = useState('waiting');\n  const [countdown, setCountdown] = useState(10);\n  const [hasBet, setHasBet] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [recentCrashes, setRecentCrashes] = useState([]);\n  const canvasRef = useRef(null);\n  const timeRef = useRef(0);\n  const particlesRef = useRef([]);\n  const socket = useRef(null);\n  const lastMultiplierRef = useRef(1);\n  const lastUpdateTimeRef = useRef(Date.now());\n  const [crashMultiplier, setCrashMultiplier] = useState(0);\n  const [roundId, setRoundId] = useState(0);\n  const [serverSeedHash, setServerSeedHash] = useState('');\n  const [revealedServerSeed, setRevealedServerSeed] = useState('');\n  const CANVAS_WIDTH = 840;\n  const CANVAS_HEIGHT = 560;\n  const SCALE = 2;\n  const FACTOR_X = CANVAS_WIDTH / 6;\n  const FACTOR_Y = CANVAS_HEIGHT / 4;\n  const MARGIN = 35;\n  const updateParticles = useCallback((worldX, worldY) => {\n    if (phase === 'running' && particlesRef.current.length < 200) {\n      for (let i = 0; i < 4; i++) {\n        particlesRef.current.push({\n          worldX: worldX + (Math.random() - 0.5) * 20,\n          worldY: worldY - 20,\n          vx: (Math.random() - 0.5) * 4,\n          vy: -(2 + Math.random() * 4),\n          life: 1.0\n        });\n      }\n    }\n  }, [phase]);\n  useEffect(() => {\n    socket.current = io(SOCKET_URL);\n    socket.current.on('gameUpdate', data => {\n      setPhase(data.phase);\n      setMultiplier(data.multiplier);\n      setBalance(data.balance);\n      setCountdown(data.countdown || 0);\n      setUserName(data.name || '');\n    });\n    socket.current.on('userUpdate', data => {\n      setBalance(data.balance);\n      setUserName(data.name || '');\n    });\n    socket.current.on('multiplierUpdate', newMultiplier => {\n      setMultiplier(newMultiplier);\n      lastMultiplierRef.current = newMultiplier;\n      lastUpdateTimeRef.current = Date.now();\n    });\n    socket.current.on('waitingPhase', ({\n      countdown,\n      roundId,\n      serverSeedHash\n    }) => {\n      setPhase('waiting');\n      setMultiplier(1);\n      setCrashMultiplier(0);\n      lastMultiplierRef.current = 1;\n      lastUpdateTimeRef.current = Date.now();\n      setCountdown(countdown);\n      setHasBet(false);\n      timeRef.current = 0;\n      particlesRef.current = [];\n      setRoundId(roundId);\n      setServerSeedHash(serverSeedHash);\n      setRevealedServerSeed('');\n    });\n    socket.current.on('gameStarted', () => {\n      setPhase('running');\n    });\n    socket.current.on('gameCrashed', ({\n      crashPoint,\n      serverSeed\n    }) => {\n      setPhase('crashed');\n      setCrashMultiplier(crashPoint);\n      setRevealedServerSeed(serverSeed);\n    });\n    socket.current.on('recentCrashes', crashes => {\n      setRecentCrashes(crashes);\n    });\n    socket.current.on('recentCrashesUpdate', crashes => {\n      setRecentCrashes(crashes);\n    });\n    socket.current.on('balanceUpdate', newBalance => setBalance(newBalance));\n    socket.current.on('cashOutSuccess', ({\n      multiplier,\n      winnings\n    }) => {\n      alert(`Cashed out at ${multiplier.toFixed(2)}x! Won $${winnings.toFixed(2)}`);\n    });\n    socket.current.on('leaderboardUpdate', lb => setLeaderboard(lb));\n    socket.current.on('countdownUpdate', newCountdown => {\n      setCountdown(newCountdown);\n    });\n    return () => socket.current.disconnect();\n  }, []);\n  const cashOut = useCallback(() => {\n    if (phase !== 'running' || !hasBet) return;\n    socket.current.emit('cashOut');\n  }, [phase, hasBet]);\n\n  // Automatic cashout when multiplier reaches maxMultiplier\n  useEffect(() => {\n    if (phase === 'running' && hasBet && multiplier >= maxMultiplier) {\n      cashOut();\n    }\n  }, [multiplier, maxMultiplier, phase, hasBet, cashOut]);\n  useEffect(() => {\n    if (phase === 'crashed') {\n      const t = crashMultiplier - 1;\n      const worldX = t * FACTOR_X;\n      const worldY = Math.pow(t, 1.5) * (FACTOR_Y / 2);\n      for (let i = 0; i < 400; i++) {\n        particlesRef.current.push({\n          worldX: worldX + (Math.random() - 0.5) * 40,\n          worldY: worldY + (Math.random() - 0.5) * 40,\n          vx: (Math.random() - 0.5) * 10,\n          vy: (Math.random() - 0.5) * 10,\n          life: 1.0\n        });\n      }\n    }\n  }, [phase, crashMultiplier, FACTOR_X, FACTOR_Y]);\n  useEffect(() => {\n    if (phase === 'crashed' && revealedServerSeed) {\n      const computedHash = CryptoJS.SHA256(revealedServerSeed).toString(CryptoJS.enc.Hex);\n      if (computedHash !== serverSeedHash) {\n        console.error('Verification failed: Hash mismatch!');\n        return;\n      }\n      const hmac = CryptoJS.HmacSHA256(roundId.toString(), revealedServerSeed);\n      const hash = hmac.toString(CryptoJS.enc.Hex);\n      const intValue = parseInt(hash.substr(0, 8), 16);\n      const normalized = intValue / 0xffffffff;\n      const computedCrash = 1 + normalized * 9;\n      if (Math.abs(computedCrash - crashMultiplier) > 0.01) {\n        console.error('Verification failed: Crash point mismatch!');\n      } else {\n        console.log('Provably fair verification passed!');\n      }\n    }\n  }, [phase, revealedServerSeed, serverSeedHash, roundId, crashMultiplier]);\n  const setMyName = () => {\n    if (nameInput.trim()) {\n      socket.current.emit('setName', nameInput.trim());\n      setNameInput('');\n    }\n  };\n  const placeBet = () => {\n    if (phase !== 'waiting' || bet > balance || bet <= 0 || hasBet || !userName) return;\n    socket.current.emit('placeBet', bet);\n    setHasBet(true);\n  };\n\n  // Handle button click based on phase\n  const handleButtonClick = () => {\n    if (phase === 'waiting' && countdown > 0 && !hasBet && userName) {\n      placeBet();\n    } else if (phase === 'running' && hasBet) {\n      cashOut();\n    }\n  };\n  useEffect(() => {\n    let frameId;\n    const animate = () => {\n      if (!canvasRef.current) return;\n      const ctx = canvasRef.current.getContext('2d');\n      let estimatedMultiplier = multiplier;\n      let endMultiplier = multiplier;\n      let end_t = 0;\n      if (phase === 'running') {\n        const now = Date.now();\n        const timeSinceLastUpdate = (now - lastUpdateTimeRef.current) / 1000;\n        estimatedMultiplier = lastMultiplierRef.current + timeSinceLastUpdate * 0.1;\n        endMultiplier = estimatedMultiplier;\n      } else if (phase === 'crashed') {\n        endMultiplier = crashMultiplier;\n      }\n      end_t = endMultiplier - 1;\n      const numPoints = 200;\n      const tempTrail = [];\n      if (end_t > 0 && (phase === 'running' || phase === 'crashed')) {\n        for (let i = 0; i <= numPoints; i++) {\n          const ti = i / numPoints * end_t;\n          const wx = ti * FACTOR_X;\n          const wy = Math.pow(ti, 1.5) * (FACTOR_Y / 2);\n          tempTrail.push({\n            worldX: wx,\n            worldY: wy\n          });\n        }\n      }\n      let worldX = 0;\n      let worldY = 0;\n      if (end_t > 0) {\n        worldX = end_t * FACTOR_X;\n        worldY = Math.pow(end_t, 1.5) * (FACTOR_Y / 2);\n      }\n      let zoomScale = 1;\n      if (worldX > 0 && worldY > 0) {\n        const scaleX = (CANVAS_WIDTH - MARGIN) / worldX;\n        const scaleY = (CANVAS_HEIGHT - MARGIN) / worldY;\n        zoomScale = Math.min(1, Math.min(scaleX, scaleY));\n      }\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.beginPath();\n      ctx.moveTo(0, CANVAS_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.moveTo(0, CANVAS_HEIGHT);\n      ctx.lineTo(0, 0);\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = SCALE * zoomScale;\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = 4 * zoomScale;\n      tempTrail.forEach((point, i) => {\n        const drawX = point.worldX * zoomScale;\n        const drawY = CANVAS_HEIGHT - point.worldY * zoomScale;\n        if (i === 0) ctx.moveTo(drawX, drawY);else ctx.lineTo(drawX, drawY);\n      });\n      ctx.stroke();\n      if (phase === 'running') {\n        const drawRocketX = worldX * zoomScale;\n        const drawRocketY = CANVAS_HEIGHT - worldY * zoomScale;\n        ctx.beginPath();\n        ctx.arc(drawRocketX, drawRocketY, 10 * zoomScale, 0, Math.PI * 2);\n        ctx.fillStyle = '#fff';\n        ctx.fill();\n      }\n      particlesRef.current.forEach(p => {\n        const drawX = p.worldX * zoomScale;\n        const drawY = CANVAS_HEIGHT - p.worldY * zoomScale;\n        ctx.beginPath();\n        ctx.arc(drawX, drawY, Math.max(0, 6 * p.life) * zoomScale, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(255, 128, 0, ${Math.max(0, p.life)})`;\n        ctx.fill();\n      });\n      if (phase === 'running') {\n        updateParticles(worldX, worldY);\n      }\n      particlesRef.current.forEach(p => {\n        p.worldX += p.vx;\n        p.worldY += p.vy;\n        p.life -= 0.02;\n      });\n      particlesRef.current = particlesRef.current.filter(p => p.life > 0);\n      const cardWidth = 42;\n      const cardHeight = 17.5;\n      const spacing = 7;\n      const marginRight = 7;\n      const marginTop = 7;\n      const numCards = recentCrashes.length;\n      const totalWidth = numCards * cardWidth + (numCards - 1) * spacing;\n      let startX = CANVAS_WIDTH - totalWidth - marginRight;\n      for (let i = 0; i < numCards; i++) {\n        const x = startX + i * (cardWidth + spacing);\n        const y = marginTop;\n        ctx.fillStyle = 'white';\n        ctx.fillRect(x, y, cardWidth, cardHeight);\n        ctx.strokeStyle = 'orange';\n        ctx.lineWidth = 1.4;\n        ctx.strokeRect(x, y, cardWidth, cardHeight);\n        const multi = recentCrashes[i];\n        const text = `${multi.toFixed(2)}x`;\n        ctx.font = '10px Arial';\n        ctx.fillStyle = 'green';\n        const textWidth = ctx.measureText(text).width;\n        ctx.fillText(text, x + (cardWidth - textWidth) / 2, y + cardHeight / 2 + 3.5);\n      }\n      let displayText = '';\n      if (phase === 'running') {\n        displayText = `${estimatedMultiplier.toFixed(2)}x`;\n      } else if (phase === 'crashed') {\n        displayText = `Crashed at ${crashMultiplier.toFixed(2)}x`;\n      } else if (phase === 'waiting') {\n        displayText = `${countdown}s`;\n      }\n      if (displayText) {\n        ctx.font = 'bold 48px Arial';\n        ctx.fillStyle = phase === 'crashed' ? '#ff0000' : '#ffffff';\n        ctx.textAlign = 'center';\n        ctx.fillText(displayText, CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2);\n      }\n      frameId = requestAnimationFrame(animate);\n    };\n    frameId = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(frameId);\n  }, [phase, multiplier, crashMultiplier, updateParticles, recentCrashes, FACTOR_X, FACTOR_Y, countdown]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row justify-center items-start min-h-screen bg-gray-800 text-white font-sans\",\n    children: [userName && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-64 bg-gray-700 rounded-lg shadow-lg p-6 mr-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-bold mb-4\",\n        children: \"Bet Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm mb-1\",\n          children: \"Bet Amount ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: bet,\n          min: \"1\",\n          max: balance,\n          onChange: e => setBet(Math.max(1, Math.min(balance, parseFloat(e.target.value) || 1))),\n          className: \"w-full px-3 py-2 bg-gray-600 rounded text-white focus:outline-none\",\n          disabled: phase !== 'waiting' || hasBet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm mb-1\",\n          children: \"Auto Cashout Multiplier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: maxMultiplier,\n          min: \"1\",\n          step: \"0.1\",\n          onChange: e => setMaxMultiplier(Math.max(1, parseFloat(e.target.value) || 1)),\n          className: \"w-full px-3 py-2 bg-gray-600 rounded text-white focus:outline-none\",\n          disabled: phase !== 'waiting' || hasBet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleButtonClick,\n        disabled: phase === 'waiting' && (countdown === 0 || !userName || hasBet),\n        className: `w-full py-3 rounded font-semibold text-white focus:outline-none\n              ${phase === 'running' && hasBet ? 'bg-green-600 hover:bg-green-700' : phase === 'waiting' && countdown > 0 && !hasBet && userName ? 'bg-blue-600 hover:bg-blue-700' : 'bg-gray-500 cursor-not-allowed'}`,\n        children: phase === 'running' && hasBet ? 'Cash Out' : phase === 'waiting' && countdown > 0 && !hasBet && userName ? 'Play Next Round' : 'Waiting'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-lg\",\n        children: [\"Balance: $\", balance.toFixed(2), \" | Phase: \", phase]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), !userName ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mr-2\",\n          children: \"Enter your name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: nameInput,\n          onChange: e => setNameInput(e.target.value),\n          className: \"px-3 py-2 bg-gray-600 rounded text-white mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: setMyName,\n          className: \"px-4 py-2 bg-blue-600 rounded text-white hover:bg-blue-700\",\n          children: \"Set Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: CANVAS_WIDTH,\n          height: CANVAS_HEIGHT,\n          className: \"border-2 border-white bg-gray-700\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-6 w-48\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-bold mb-2\",\n            children: \"Leaderboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), leaderboard.map((entry, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm\",\n            children: [entry.name, \": \", entry.result, \" - $\", entry.money]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 5\n  }, this);\n}\n_s(CrashGame, \"hBo099U/q/7TJX3qm/FyCnPiJmM=\");\n_c = CrashGame;\nexport default CrashGame;\nvar _c;\n$RefreshReg$(_c, \"CrashGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","io","CryptoJS","jsxDEV","_jsxDEV","SOCKET_URL","CrashGame","_s","balance","setBalance","bet","setBet","maxMultiplier","setMaxMultiplier","multiplier","setMultiplier","phase","setPhase","countdown","setCountdown","hasBet","setHasBet","userName","setUserName","nameInput","setNameInput","leaderboard","setLeaderboard","recentCrashes","setRecentCrashes","canvasRef","timeRef","particlesRef","socket","lastMultiplierRef","lastUpdateTimeRef","Date","now","crashMultiplier","setCrashMultiplier","roundId","setRoundId","serverSeedHash","setServerSeedHash","revealedServerSeed","setRevealedServerSeed","CANVAS_WIDTH","CANVAS_HEIGHT","SCALE","FACTOR_X","FACTOR_Y","MARGIN","updateParticles","worldX","worldY","current","length","i","push","Math","random","vx","vy","life","on","data","name","newMultiplier","crashPoint","serverSeed","crashes","newBalance","winnings","alert","toFixed","lb","newCountdown","disconnect","cashOut","emit","t","pow","computedHash","SHA256","toString","enc","Hex","console","error","hmac","HmacSHA256","hash","intValue","parseInt","substr","normalized","computedCrash","abs","log","setMyName","trim","placeBet","handleButtonClick","frameId","animate","ctx","getContext","estimatedMultiplier","endMultiplier","end_t","timeSinceLastUpdate","numPoints","tempTrail","ti","wx","wy","zoomScale","scaleX","scaleY","min","clearRect","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","forEach","point","drawX","drawY","drawRocketX","drawRocketY","arc","PI","fillStyle","fill","p","max","filter","cardWidth","cardHeight","spacing","marginRight","marginTop","numCards","totalWidth","startX","x","y","fillRect","strokeRect","multi","text","font","textWidth","measureText","width","fillText","displayText","textAlign","requestAnimationFrame","cancelAnimationFrame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","parseFloat","target","disabled","step","onClick","ref","height","map","entry","result","money","_c","$RefreshReg$"],"sources":["/Users/dylanembry/Projects/crash-game/client/src/CrashGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport CryptoJS from 'crypto-js';\n\nconst SOCKET_URL = 'http://localhost:3001';\n\nfunction CrashGame() {\n  const [balance, setBalance] = useState(1000);\n  const [bet, setBet] = useState(10);\n  const [maxMultiplier, setMaxMultiplier] = useState(2); // New state for max multiplier\n  const [multiplier, setMultiplier] = useState(1);\n  const [phase, setPhase] = useState('waiting');\n  const [countdown, setCountdown] = useState(10);\n  const [hasBet, setHasBet] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [recentCrashes, setRecentCrashes] = useState([]);\n  const canvasRef = useRef(null);\n  const timeRef = useRef(0);\n  const particlesRef = useRef([]);\n  const socket = useRef(null);\n  const lastMultiplierRef = useRef(1);\n  const lastUpdateTimeRef = useRef(Date.now());\n  const [crashMultiplier, setCrashMultiplier] = useState(0);\n  const [roundId, setRoundId] = useState(0);\n  const [serverSeedHash, setServerSeedHash] = useState('');\n  const [revealedServerSeed, setRevealedServerSeed] = useState('');\n\n  const CANVAS_WIDTH = 840;\n  const CANVAS_HEIGHT = 560;\n  const SCALE = 2;\n  const FACTOR_X = CANVAS_WIDTH / 6;\n  const FACTOR_Y = CANVAS_HEIGHT / 4;\n  const MARGIN = 35;\n\n  const updateParticles = useCallback((worldX, worldY) => {\n    if (phase === 'running' && particlesRef.current.length < 200) {\n      for (let i = 0; i < 4; i++) {\n        particlesRef.current.push({\n          worldX: worldX + (Math.random() - 0.5) * 20,\n          worldY: worldY - 20,\n          vx: (Math.random() - 0.5) * 4,\n          vy: -(2 + Math.random() * 4),\n          life: 1.0,\n        });\n      }\n    }\n  }, [phase]);\n\n  useEffect(() => {\n    socket.current = io(SOCKET_URL);\n\n    socket.current.on('gameUpdate', (data) => {\n      setPhase(data.phase);\n      setMultiplier(data.multiplier);\n      setBalance(data.balance);\n      setCountdown(data.countdown || 0);\n      setUserName(data.name || '');\n    });\n\n    socket.current.on('userUpdate', (data) => {\n      setBalance(data.balance);\n      setUserName(data.name || '');\n    });\n\n    socket.current.on('multiplierUpdate', (newMultiplier) => {\n      setMultiplier(newMultiplier);\n      lastMultiplierRef.current = newMultiplier;\n      lastUpdateTimeRef.current = Date.now();\n    });\n\n    socket.current.on('waitingPhase', ({ countdown, roundId, serverSeedHash }) => {\n      setPhase('waiting');\n      setMultiplier(1);\n      setCrashMultiplier(0);\n      lastMultiplierRef.current = 1;\n      lastUpdateTimeRef.current = Date.now();\n      setCountdown(countdown);\n      setHasBet(false);\n      timeRef.current = 0;\n      particlesRef.current = [];\n      setRoundId(roundId);\n      setServerSeedHash(serverSeedHash);\n      setRevealedServerSeed('');\n    });\n\n    socket.current.on('gameStarted', () => {\n      setPhase('running');\n    });\n\n    socket.current.on('gameCrashed', ({ crashPoint, serverSeed }) => {\n      setPhase('crashed');\n      setCrashMultiplier(crashPoint);\n      setRevealedServerSeed(serverSeed);\n    });\n\n    socket.current.on('recentCrashes', (crashes) => {\n      setRecentCrashes(crashes);\n    });\n\n    socket.current.on('recentCrashesUpdate', (crashes) => {\n      setRecentCrashes(crashes);\n    });\n\n    socket.current.on('balanceUpdate', (newBalance) => setBalance(newBalance));\n    socket.current.on('cashOutSuccess', ({ multiplier, winnings }) => {\n      alert(`Cashed out at ${multiplier.toFixed(2)}x! Won $${winnings.toFixed(2)}`);\n    });\n\n    socket.current.on('leaderboardUpdate', (lb) => setLeaderboard(lb));\n\n    socket.current.on('countdownUpdate', (newCountdown) => {\n      setCountdown(newCountdown);\n    });\n\n    return () => socket.current.disconnect();\n  }, []);\n\n  const cashOut = useCallback(() => {\n    if (phase !== 'running' || !hasBet) return;\n    socket.current.emit('cashOut');\n  }, [phase, hasBet]);\n\n  // Automatic cashout when multiplier reaches maxMultiplier\n  useEffect(() => {\n    if (phase === 'running' && hasBet && multiplier >= maxMultiplier) {\n      cashOut();\n    }\n  }, [multiplier, maxMultiplier, phase, hasBet, cashOut]);\n\n  useEffect(() => {\n    if (phase === 'crashed') {\n      const t = crashMultiplier - 1;\n      const worldX = t * FACTOR_X;\n      const worldY = Math.pow(t, 1.5) * (FACTOR_Y / 2);\n      for (let i = 0; i < 400; i++) {\n        particlesRef.current.push({\n          worldX: worldX + (Math.random() - 0.5) * 40,\n          worldY: worldY + (Math.random() - 0.5) * 40,\n          vx: (Math.random() - 0.5) * 10,\n          vy: (Math.random() - 0.5) * 10,\n          life: 1.0,\n        });\n      }\n    }\n  }, [phase, crashMultiplier, FACTOR_X, FACTOR_Y]);\n\n  useEffect(() => {\n    if (phase === 'crashed' && revealedServerSeed) {\n      const computedHash = CryptoJS.SHA256(revealedServerSeed).toString(CryptoJS.enc.Hex);\n      if (computedHash !== serverSeedHash) {\n        console.error('Verification failed: Hash mismatch!');\n        return;\n      }\n      const hmac = CryptoJS.HmacSHA256(roundId.toString(), revealedServerSeed);\n      const hash = hmac.toString(CryptoJS.enc.Hex);\n      const intValue = parseInt(hash.substr(0, 8), 16);\n      const normalized = intValue / 0xffffffff;\n      const computedCrash = 1 + normalized * 9;\n      if (Math.abs(computedCrash - crashMultiplier) > 0.01) {\n        console.error('Verification failed: Crash point mismatch!');\n      } else {\n        console.log('Provably fair verification passed!');\n      }\n    }\n  }, [phase, revealedServerSeed, serverSeedHash, roundId, crashMultiplier]);\n\n  const setMyName = () => {\n    if (nameInput.trim()) {\n      socket.current.emit('setName', nameInput.trim());\n      setNameInput('');\n    }\n  };\n\n  const placeBet = () => {\n    if (phase !== 'waiting' || bet > balance || bet <= 0 || hasBet || !userName) return;\n    socket.current.emit('placeBet', bet);\n    setHasBet(true);\n  };\n\n\n  // Handle button click based on phase\n  const handleButtonClick = () => {\n    if (phase === 'waiting' && countdown > 0 && !hasBet && userName) {\n      placeBet();\n    } else if (phase === 'running' && hasBet) {\n      cashOut();\n    }\n  };\n\n  useEffect(() => {\n    let frameId;\n    const animate = () => {\n      if (!canvasRef.current) return;\n      const ctx = canvasRef.current.getContext('2d');\n\n      let estimatedMultiplier = multiplier;\n      let endMultiplier = multiplier;\n      let end_t = 0;\n\n      if (phase === 'running') {\n        const now = Date.now();\n        const timeSinceLastUpdate = (now - lastUpdateTimeRef.current) / 1000;\n        estimatedMultiplier = lastMultiplierRef.current + (timeSinceLastUpdate * 0.1);\n        endMultiplier = estimatedMultiplier;\n      } else if (phase === 'crashed') {\n        endMultiplier = crashMultiplier;\n      }\n\n      end_t = endMultiplier - 1;\n\n      const numPoints = 200;\n      const tempTrail = [];\n      if (end_t > 0 && (phase === 'running' || phase === 'crashed')) {\n        for (let i = 0; i <= numPoints; i++) {\n          const ti = (i / numPoints) * end_t;\n          const wx = ti * FACTOR_X;\n          const wy = Math.pow(ti, 1.5) * (FACTOR_Y / 2);\n          tempTrail.push({ worldX: wx, worldY: wy });\n        }\n      }\n\n      let worldX = 0;\n      let worldY = 0;\n      if (end_t > 0) {\n        worldX = end_t * FACTOR_X;\n        worldY = Math.pow(end_t, 1.5) * (FACTOR_Y / 2);\n      }\n\n      let zoomScale = 1;\n      if (worldX > 0 && worldY > 0) {\n        const scaleX = (CANVAS_WIDTH - MARGIN) / worldX;\n        const scaleY = (CANVAS_HEIGHT - MARGIN) / worldY;\n        zoomScale = Math.min(1, Math.min(scaleX, scaleY));\n      }\n\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.beginPath();\n      ctx.moveTo(0, CANVAS_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.moveTo(0, CANVAS_HEIGHT);\n      ctx.lineTo(0, 0);\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = SCALE * zoomScale;\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = 4 * zoomScale;\n      tempTrail.forEach((point, i) => {\n        const drawX = point.worldX * zoomScale;\n        const drawY = CANVAS_HEIGHT - point.worldY * zoomScale;\n        if (i === 0) ctx.moveTo(drawX, drawY);\n        else ctx.lineTo(drawX, drawY);\n      });\n      ctx.stroke();\n\n      if (phase === 'running') {\n        const drawRocketX = worldX * zoomScale;\n        const drawRocketY = CANVAS_HEIGHT - worldY * zoomScale;\n        ctx.beginPath();\n        ctx.arc(drawRocketX, drawRocketY, 10 * zoomScale, 0, Math.PI * 2);\n        ctx.fillStyle = '#fff';\n        ctx.fill();\n      }\n\n      particlesRef.current.forEach(p => {\n        const drawX = p.worldX * zoomScale;\n        const drawY = CANVAS_HEIGHT - p.worldY * zoomScale;\n        ctx.beginPath();\n        ctx.arc(drawX, drawY, Math.max(0, 6 * p.life) * zoomScale, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(255, 128, 0, ${Math.max(0, p.life)})`;\n        ctx.fill();\n      });\n\n      if (phase === 'running') {\n        updateParticles(worldX, worldY);\n      }\n\n      particlesRef.current.forEach(p => {\n        p.worldX += p.vx;\n        p.worldY += p.vy;\n        p.life -= 0.02;\n      });\n      particlesRef.current = particlesRef.current.filter(p => p.life > 0);\n\n      const cardWidth = 42;\n      const cardHeight = 17.5;\n      const spacing = 7;\n      const marginRight = 7;\n      const marginTop = 7;\n      const numCards = recentCrashes.length;\n      const totalWidth = numCards * cardWidth + (numCards - 1) * spacing;\n      let startX = CANVAS_WIDTH - totalWidth - marginRight;\n      for (let i = 0; i < numCards; i++) {\n        const x = startX + i * (cardWidth + spacing);\n        const y = marginTop;\n        ctx.fillStyle = 'white';\n        ctx.fillRect(x, y, cardWidth, cardHeight);\n        ctx.strokeStyle = 'orange';\n        ctx.lineWidth = 1.4;\n        ctx.strokeRect(x, y, cardWidth, cardHeight);\n        const multi = recentCrashes[i];\n        const text = `${multi.toFixed(2)}x`;\n        ctx.font = '10px Arial';\n        ctx.fillStyle = 'green';\n        const textWidth = ctx.measureText(text).width;\n        ctx.fillText(text, x + (cardWidth - textWidth)/2, y + cardHeight/2 + 3.5);\n      }\n\n      let displayText = '';\n      if (phase === 'running') {\n        displayText = `${estimatedMultiplier.toFixed(2)}x`;\n      } else if (phase === 'crashed') {\n        displayText = `Crashed at ${crashMultiplier.toFixed(2)}x`;\n      } else if (phase === 'waiting') {\n        displayText = `${countdown}s`;\n      }\n\n      if (displayText) {\n        ctx.font = 'bold 48px Arial';\n        ctx.fillStyle = phase === 'crashed' ? '#ff0000' : '#ffffff';\n        ctx.textAlign = 'center';\n        ctx.fillText(displayText, CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2);\n      }\n\n      frameId = requestAnimationFrame(animate);\n    };\n\n    frameId = requestAnimationFrame(animate);\n\n    return () => cancelAnimationFrame(frameId);\n  }, [phase, multiplier, crashMultiplier, updateParticles, recentCrashes, FACTOR_X, FACTOR_Y, countdown]);\n\n  return (\n    <div className=\"flex flex-row justify-center items-start min-h-screen bg-gray-800 text-white font-sans\">\n      {/* Card Component on the Left */}\n      {userName && (\n        <div className=\"w-64 bg-gray-700 rounded-lg shadow-lg p-6 mr-6\">\n          <h3 className=\"text-lg font-bold mb-4\">Bet Controls</h3>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm mb-1\">Bet Amount ($)</label>\n            <input\n              type=\"number\"\n              value={bet}\n              min=\"1\"\n              max={balance}\n              onChange={(e) => setBet(Math.max(1, Math.min(balance, parseFloat(e.target.value) || 1)))}\n              className=\"w-full px-3 py-2 bg-gray-600 rounded text-white focus:outline-none\"\n              disabled={phase !== 'waiting' || hasBet}\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm mb-1\">Auto Cashout Multiplier</label>\n            <input\n              type=\"number\"\n              value={maxMultiplier}\n              min=\"1\"\n              step=\"0.1\"\n              onChange={(e) => setMaxMultiplier(Math.max(1, parseFloat(e.target.value) || 1))}\n              className=\"w-full px-3 py-2 bg-gray-600 rounded text-white focus:outline-none\"\n              disabled={phase !== 'waiting' || hasBet}\n            />\n          </div>\n          <button\n            onClick={handleButtonClick}\n            disabled={phase === 'waiting' && (countdown === 0 || !userName || hasBet)}\n            className={`w-full py-3 rounded font-semibold text-white focus:outline-none\n              ${phase === 'running' && hasBet\n                ? 'bg-green-600 hover:bg-green-700'\n                : phase === 'waiting' && countdown > 0 && !hasBet && userName\n                ? 'bg-blue-600 hover:bg-blue-700'\n                : 'bg-gray-500 cursor-not-allowed'}`}\n          >\n            {phase === 'running' && hasBet\n              ? 'Cash Out'\n              : phase === 'waiting' && countdown > 0 && !hasBet && userName\n              ? 'Play Next Round'\n              : 'Waiting'}\n          </button>\n        </div>\n      )}\n      <div className=\"flex flex-col items-center\">\n        <div className=\"mb-4 text-lg\">\n          Balance: ${balance.toFixed(2)} | Phase: {phase}\n        </div>\n        {!userName ? (\n          <div className=\"mb-4\">\n            <label className=\"mr-2\">Enter your name:</label>\n            <input\n              value={nameInput}\n              onChange={(e) => setNameInput(e.target.value)}\n              className=\"px-3 py-2 bg-gray-600 rounded text-white mr-2\"\n            />\n            <button\n              onClick={setMyName}\n              className=\"px-4 py-2 bg-blue-600 rounded text-white hover:bg-blue-700\"\n            >\n              Set Name\n            </button>\n          </div>\n        ) : null}\n        <div className=\"flex justify-center items-start\">\n          <canvas\n            ref={canvasRef}\n            width={CANVAS_WIDTH}\n            height={CANVAS_HEIGHT}\n            className=\"border-2 border-white bg-gray-700\"\n          />\n          <div className=\"ml-6 w-48\">\n            <h3 className=\"text-lg font-bold mb-2\">Leaderboard</h3>\n            {leaderboard.map((entry, i) => (\n              <div key={i} className=\"text-sm\">\n                {entry.name}: {entry.result} - ${entry.money}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CrashGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}