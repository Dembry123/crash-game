{"ast":null,"code":"var _jsxFileName = \"/Users/dylanembry/Projects/crash-game/client/src/CrashGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = 'http://localhost:3001';\nfunction CrashGame() {\n  _s();\n  const [balance, setBalance] = useState(1000);\n  const [bet, setBet] = useState(10);\n  const [multiplier, setMultiplier] = useState(1);\n  const [phase, setPhase] = useState('waiting');\n  const [countdown, setCountdown] = useState(10);\n  const [hasBet, setHasBet] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [leaderboard, setLeaderboard] = useState([]);\n  const canvasRef = useRef(null);\n  const timeRef = useRef(0);\n  const particlesRef = useRef([]);\n  const trailRef = useRef([]);\n  const socket = useRef(null);\n  const lastMultiplierRef = useRef(1);\n  const lastUpdateTimeRef = useRef(Date.now());\n  const CANVAS_WIDTH = 1200;\n  const CANVAS_HEIGHT = 800;\n  const SCALE = 2;\n  const FACTOR_X = CANVAS_WIDTH / 6;\n  const FACTOR_Y = CANVAS_HEIGHT / 4;\n  const MARGIN = 50;\n  const updateParticles = useCallback((worldX, worldY) => {\n    if (phase === 'running' && particlesRef.current.length < 200) {\n      for (let i = 0; i < 4; i++) {\n        particlesRef.current.push({\n          worldX: worldX + (Math.random() - 0.5) * 20,\n          worldY: worldY - 20,\n          vx: (Math.random() - 0.5) * 4,\n          vy: -(2 + Math.random() * 4),\n          life: 1.0\n        });\n      }\n    }\n    particlesRef.current.forEach(p => {\n      p.worldX += p.vx;\n      p.worldY += p.vy;\n      p.life -= 0.02;\n      if (p.life < 0) console.warn('Negative life detected:', p.life);\n    });\n    particlesRef.current = particlesRef.current.filter(p => p.life > 0);\n  }, [phase]);\n  useEffect(() => {\n    socket.current = io(SOCKET_URL);\n    socket.current.on('gameUpdate', data => {\n      setPhase(data.phase);\n      setMultiplier(data.multiplier);\n      setBalance(data.balance);\n      setCountdown(data.countdown || 0);\n      setUserName(data.name || '');\n    });\n    socket.current.on('userUpdate', data => {\n      setBalance(data.balance);\n      setUserName(data.name || '');\n    });\n    socket.current.on('multiplierUpdate', newMultiplier => {\n      setMultiplier(newMultiplier);\n      lastMultiplierRef.current = newMultiplier;\n      lastUpdateTimeRef.current = Date.now();\n    });\n    socket.current.on('waitingPhase', ({\n      countdown\n    }) => {\n      setPhase('waiting');\n      setCountdown(countdown);\n      setHasBet(false);\n      timeRef.current = 0;\n      trailRef.current = [];\n      particlesRef.current = [];\n    });\n    socket.current.on('gameStarted', () => {\n      setPhase('running');\n    });\n    socket.current.on('gameCrashed', ({\n      crashPoint\n    }) => {\n      setPhase('crashed');\n    });\n    socket.current.on('balanceUpdate', newBalance => setBalance(newBalance));\n    socket.current.on('cashOutSuccess', ({\n      multiplier,\n      winnings\n    }) => {\n      alert(`Cashed out at ${multiplier.toFixed(2)}x! Won $${winnings.toFixed(2)}`);\n    });\n    socket.current.on('leaderboardUpdate', lb => setLeaderboard(lb));\n    return () => socket.current.disconnect();\n  }, []);\n  const setMyName = () => {\n    if (nameInput.trim()) {\n      socket.current.emit('setName', nameInput.trim());\n      setNameInput('');\n    }\n  };\n  const placeBet = () => {\n    if (phase !== 'waiting' || bet > balance || bet <= 0 || hasBet || !userName) return;\n    socket.current.emit('placeBet', bet);\n    setHasBet(true);\n  };\n  const cashOut = () => {\n    if (phase !== 'running' || !hasBet) return;\n    socket.current.emit('cashOut');\n  };\n  useEffect(() => {\n    let frameId;\n    const animate = () => {\n      var _trailRef$current;\n      if (!canvasRef.current) return;\n      const ctx = canvasRef.current.getContext('2d');\n      const now = Date.now();\n      const timeSinceLastUpdate = (now - lastUpdateTimeRef.current) / 1000;\n      const estimatedMultiplier = lastMultiplierRef.current + timeSinceLastUpdate * 0.1;\n      const t = estimatedMultiplier - 1;\n      const worldX = t * FACTOR_X;\n      const worldY = Math.pow(t, 1.5) * (FACTOR_Y / 2);\n      let zoomScale = 1;\n      if (worldX > 0 && worldY > 0) {\n        const scaleX = (CANVAS_WIDTH - MARGIN) / worldX;\n        const scaleY = (CANVAS_HEIGHT - MARGIN) / worldY;\n        zoomScale = Math.min(1, Math.min(scaleX, scaleY));\n      }\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.beginPath();\n      ctx.moveTo(0, CANVAS_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.moveTo(0, CANVAS_HEIGHT);\n      ctx.lineTo(0, 0);\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = SCALE * zoomScale;\n      ctx.stroke();\n      if (phase === 'running' && now - (((_trailRef$current = trailRef.current[trailRef.current.length - 1]) === null || _trailRef$current === void 0 ? void 0 : _trailRef$current.timestamp) || 0) > 100) {\n        trailRef.current.push({\n          worldX,\n          worldY,\n          timestamp: now\n        });\n        if (trailRef.current.length > 400) trailRef.current.shift();\n      }\n      ctx.beginPath();\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = 4 * zoomScale;\n      trailRef.current.forEach((point, i) => {\n        const drawX = point.worldX * zoomScale;\n        const drawY = CANVAS_HEIGHT - point.worldY * zoomScale;\n        if (i === 0) ctx.moveTo(drawX, drawY);else ctx.lineTo(drawX, drawY);\n      });\n      ctx.stroke();\n      if (phase !== 'crashed') {\n        const drawRocketX = worldX * zoomScale;\n        const drawRocketY = CANVAS_HEIGHT - worldY * zoomScale;\n        ctx.beginPath();\n        ctx.arc(drawRocketX, drawRocketY, 10 * zoomScale, 0, Math.PI * 2);\n        ctx.fillStyle = '#fff';\n        ctx.fill();\n      }\n      particlesRef.current.forEach(p => {\n        const drawX = p.worldX * zoomScale;\n        const drawY = CANVAS_HEIGHT - p.worldY * zoomScale;\n        ctx.beginPath();\n        ctx.arc(drawX, drawY, Math.max(0, 6 * p.life) * zoomScale, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(255, 128, 0, ${Math.max(0, p.life)})`;\n        ctx.fill();\n      });\n      if (phase === 'running') {\n        updateParticles(worldX, worldY);\n      }\n      if (phase === 'crashed') {\n        if (particlesRef.current.length < 400) {\n          for (let i = 0; i < 100; i++) {\n            particlesRef.current.push({\n              worldX: worldX + (Math.random() - 0.5) * 40,\n              worldY: worldY + (Math.random() - 0.5) * 40,\n              vx: (Math.random() - 0.5) * 10,\n              vy: (Math.random() - 0.5) * 10,\n              life: 1.0\n            });\n          }\n        }\n        particlesRef.current.forEach(p => {\n          p.worldX += p.vx;\n          p.worldY += p.vy;\n          p.life -= 0.02;\n        });\n        particlesRef.current = particlesRef.current.filter(p => p.life > 0);\n      }\n      frameId = requestAnimationFrame(animate);\n    };\n    if (phase === 'running' || phase === 'crashed') {\n      animate();\n    }\n    return () => cancelAnimationFrame(frameId);\n  }, [phase, updateParticles, FACTOR_X, FACTOR_Y]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      fontFamily: 'Arial',\n      background: '#222',\n      color: '#fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px',\n        fontSize: '1.2em'\n      },\n      children: [\"Balance: $\", balance.toFixed(2), \" | Multiplier: \", multiplier.toFixed(2), \"x | Phase: \", phase, \" | \", phase === 'waiting' ? `Countdown: ${countdown}s` : '', userName && phase === 'waiting' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Bet: $\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: bet,\n          min: \"1\",\n          max: balance,\n          style: {\n            width: '60px'\n          },\n          onChange: e => setBet(Math.max(1, Math.min(balance, parseFloat(e.target.value))))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), !userName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Enter your name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: nameInput,\n        onChange: e => setNameInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setMyName,\n        children: \"Set Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: CANVAS_WIDTH,\n        height: CANVAS_HEIGHT,\n        style: {\n          border: '2px solid #fff',\n          background: '#333'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '20px',\n          width: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Leaderboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), leaderboard.map((entry, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [entry.name, \": \", entry.result, \" - $\", entry.money]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), phase === 'running' && hasBet && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: cashOut,\n      style: {\n        position: 'fixed',\n        left: '20px',\n        top: '50%',\n        transform: 'translateY(-50%)',\n        padding: '10px 20px',\n        fontSize: '1em',\n        cursor: 'pointer',\n        background: '#28a745',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '5px'\n      },\n      children: \"Cash Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this), phase === 'waiting' && !hasBet && userName && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: placeBet,\n      style: {\n        padding: '10px 20px',\n        margin: '10px',\n        fontSize: '1em',\n        cursor: 'pointer',\n        background: '#007bff',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '5px'\n      },\n      children: \"Place Bet & Join\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n_s(CrashGame, \"i8ElS/IyKtCse550pTUnfQytc3I=\");\n_c = CrashGame;\nexport default CrashGame;\nvar _c;\n$RefreshReg$(_c, \"CrashGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","io","jsxDEV","_jsxDEV","Fragment","_Fragment","SOCKET_URL","CrashGame","_s","balance","setBalance","bet","setBet","multiplier","setMultiplier","phase","setPhase","countdown","setCountdown","hasBet","setHasBet","userName","setUserName","nameInput","setNameInput","leaderboard","setLeaderboard","canvasRef","timeRef","particlesRef","trailRef","socket","lastMultiplierRef","lastUpdateTimeRef","Date","now","CANVAS_WIDTH","CANVAS_HEIGHT","SCALE","FACTOR_X","FACTOR_Y","MARGIN","updateParticles","worldX","worldY","current","length","i","push","Math","random","vx","vy","life","forEach","p","console","warn","filter","on","data","name","newMultiplier","crashPoint","newBalance","winnings","alert","toFixed","lb","disconnect","setMyName","trim","emit","placeBet","cashOut","frameId","animate","_trailRef$current","ctx","getContext","timeSinceLastUpdate","estimatedMultiplier","t","pow","zoomScale","scaleX","scaleY","min","clearRect","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","timestamp","shift","point","drawX","drawY","drawRocketX","drawRocketY","arc","PI","fillStyle","fill","max","requestAnimationFrame","cancelAnimationFrame","style","display","flexDirection","alignItems","fontFamily","background","color","children","margin","fontSize","type","value","width","onChange","e","parseFloat","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","justifyContent","ref","height","border","marginLeft","map","entry","result","money","position","left","top","transform","padding","cursor","borderRadius","_c","$RefreshReg$"],"sources":["/Users/dylanembry/Projects/crash-game/client/src/CrashGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport io from 'socket.io-client';\n\nconst SOCKET_URL = 'http://localhost:3001';\n\nfunction CrashGame() {\n  const [balance, setBalance] = useState(1000);\n  const [bet, setBet] = useState(10);\n  const [multiplier, setMultiplier] = useState(1);\n  const [phase, setPhase] = useState('waiting');\n  const [countdown, setCountdown] = useState(10);\n  const [hasBet, setHasBet] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [leaderboard, setLeaderboard] = useState([]);\n  const canvasRef = useRef(null);\n  const timeRef = useRef(0);\n  const particlesRef = useRef([]);\n  const trailRef = useRef([]);\n  const socket = useRef(null);\n  const lastMultiplierRef = useRef(1);\n  const lastUpdateTimeRef = useRef(Date.now());\n\n  const CANVAS_WIDTH = 1200;\n  const CANVAS_HEIGHT = 800;\n  const SCALE = 2;\n  const FACTOR_X = CANVAS_WIDTH / 6;\n  const FACTOR_Y = CANVAS_HEIGHT / 4;\n  const MARGIN = 50;\n\n  const updateParticles = useCallback((worldX, worldY) => {\n    if (phase === 'running' && particlesRef.current.length < 200) {\n      for (let i = 0; i < 4; i++) {\n        particlesRef.current.push({\n          worldX: worldX + (Math.random() - 0.5) * 20,\n          worldY: worldY - 20,\n          vx: (Math.random() - 0.5) * 4,\n          vy: -(2 + Math.random() * 4),\n          life: 1.0,\n        });\n      }\n    }\n    particlesRef.current.forEach(p => {\n      p.worldX += p.vx;\n      p.worldY += p.vy;\n      p.life -= 0.02;\n      if (p.life < 0) console.warn('Negative life detected:', p.life);\n    });\n    particlesRef.current = particlesRef.current.filter(p => p.life > 0);\n  }, [phase]);\n\n  useEffect(() => {\n    socket.current = io(SOCKET_URL);\n\n    socket.current.on('gameUpdate', (data) => {\n      setPhase(data.phase);\n      setMultiplier(data.multiplier);\n      setBalance(data.balance);\n      setCountdown(data.countdown || 0);\n      setUserName(data.name || '');\n    });\n\n    socket.current.on('userUpdate', (data) => {\n      setBalance(data.balance);\n      setUserName(data.name || '');\n    });\n\n    socket.current.on('multiplierUpdate', (newMultiplier) => {\n      setMultiplier(newMultiplier);\n      lastMultiplierRef.current = newMultiplier;\n      lastUpdateTimeRef.current = Date.now();\n    });\n\n    socket.current.on('waitingPhase', ({ countdown }) => {\n      setPhase('waiting');\n      setCountdown(countdown);\n      setHasBet(false);\n      timeRef.current = 0;\n      trailRef.current = [];\n      particlesRef.current = [];\n    });\n\n    socket.current.on('gameStarted', () => {\n      setPhase('running');\n    });\n\n    socket.current.on('gameCrashed', ({ crashPoint }) => {\n      setPhase('crashed');\n    });\n\n    socket.current.on('balanceUpdate', (newBalance) => setBalance(newBalance));\n    socket.current.on('cashOutSuccess', ({ multiplier, winnings }) => {\n      alert(`Cashed out at ${multiplier.toFixed(2)}x! Won $${winnings.toFixed(2)}`);\n    });\n\n    socket.current.on('leaderboardUpdate', (lb) => setLeaderboard(lb));\n\n    return () => socket.current.disconnect();\n  }, []);\n\n  const setMyName = () => {\n    if (nameInput.trim()) {\n      socket.current.emit('setName', nameInput.trim());\n      setNameInput('');\n    }\n  };\n\n  const placeBet = () => {\n    if (phase !== 'waiting' || bet > balance || bet <= 0 || hasBet || !userName) return;\n    socket.current.emit('placeBet', bet);\n    setHasBet(true);\n  };\n\n  const cashOut = () => {\n    if (phase !== 'running' || !hasBet) return;\n    socket.current.emit('cashOut');\n  };\n\n  useEffect(() => {\n    let frameId;\n    const animate = () => {\n      if (!canvasRef.current) return;\n      const ctx = canvasRef.current.getContext('2d');\n\n      const now = Date.now();\n      const timeSinceLastUpdate = (now - lastUpdateTimeRef.current) / 1000;\n      const estimatedMultiplier = lastMultiplierRef.current + (timeSinceLastUpdate * 0.1);\n\n      const t = estimatedMultiplier - 1;\n      const worldX = t * FACTOR_X;\n      const worldY = Math.pow(t, 1.5) * (FACTOR_Y / 2);\n\n      let zoomScale = 1;\n      if (worldX > 0 && worldY > 0) {\n        const scaleX = (CANVAS_WIDTH - MARGIN) / worldX;\n        const scaleY = (CANVAS_HEIGHT - MARGIN) / worldY;\n        zoomScale = Math.min(1, Math.min(scaleX, scaleY));\n      }\n\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.beginPath();\n      ctx.moveTo(0, CANVAS_HEIGHT);\n      ctx.lineTo(CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.moveTo(0, CANVAS_HEIGHT);\n      ctx.lineTo(0, 0);\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = SCALE * zoomScale;\n      ctx.stroke();\n\n      if (phase === 'running' && (now - (trailRef.current[trailRef.current.length - 1]?.timestamp || 0) > 100)) {\n        trailRef.current.push({ worldX, worldY, timestamp: now });\n        if (trailRef.current.length > 400) trailRef.current.shift();\n      }\n      ctx.beginPath();\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = 4 * zoomScale;\n      trailRef.current.forEach((point, i) => {\n        const drawX = point.worldX * zoomScale;\n        const drawY = CANVAS_HEIGHT - point.worldY * zoomScale;\n        if (i === 0) ctx.moveTo(drawX, drawY);\n        else ctx.lineTo(drawX, drawY);\n      });\n      ctx.stroke();\n\n      if (phase !== 'crashed') {\n        const drawRocketX = worldX * zoomScale;\n        const drawRocketY = CANVAS_HEIGHT - worldY * zoomScale;\n        ctx.beginPath();\n        ctx.arc(drawRocketX, drawRocketY, 10 * zoomScale, 0, Math.PI * 2);\n        ctx.fillStyle = '#fff';\n        ctx.fill();\n      }\n\n      particlesRef.current.forEach(p => {\n        const drawX = p.worldX * zoomScale;\n        const drawY = CANVAS_HEIGHT - p.worldY * zoomScale;\n        ctx.beginPath();\n        ctx.arc(drawX, drawY, Math.max(0, 6 * p.life) * zoomScale, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(255, 128, 0, ${Math.max(0, p.life)})`;\n        ctx.fill();\n      });\n\n      if (phase === 'running') {\n        updateParticles(worldX, worldY);\n      }\n\n      if (phase === 'crashed') {\n        if (particlesRef.current.length < 400) {\n          for (let i = 0; i < 100; i++) {\n            particlesRef.current.push({\n              worldX: worldX + (Math.random() - 0.5) * 40,\n              worldY: worldY + (Math.random() - 0.5) * 40,\n              vx: (Math.random() - 0.5) * 10,\n              vy: (Math.random() - 0.5) * 10,\n              life: 1.0,\n            });\n          }\n        }\n        particlesRef.current.forEach(p => {\n          p.worldX += p.vx;\n          p.worldY += p.vy;\n          p.life -= 0.02;\n        });\n        particlesRef.current = particlesRef.current.filter(p => p.life > 0);\n      }\n\n      frameId = requestAnimationFrame(animate);\n    };\n\n    if (phase === 'running' || phase === 'crashed') {\n      animate();\n    }\n\n    return () => cancelAnimationFrame(frameId);\n  }, [phase, updateParticles, FACTOR_X, FACTOR_Y]);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', fontFamily: 'Arial', background: '#222', color: '#fff' }}>\n      <div style={{ margin: '10px', fontSize: '1.2em' }}>\n        Balance: ${balance.toFixed(2)} | Multiplier: {multiplier.toFixed(2)}x | Phase: {phase} | {phase === 'waiting' ? `Countdown: ${countdown}s` : ''}\n        {userName && phase === 'waiting' && (\n          <>\n            Bet: $\n            <input\n              type=\"number\"\n              value={bet}\n              min=\"1\"\n              max={balance}\n              style={{ width: '60px' }}\n              onChange={(e) => setBet(Math.max(1, Math.min(balance, parseFloat(e.target.value))))}\n            />\n          </>\n        )}\n      </div>\n      {!userName ? (\n        <div>\n          Enter your name:\n          <input value={nameInput} onChange={(e) => setNameInput(e.target.value)} />\n          <button onClick={setMyName}>Set Name</button>\n        </div>\n      ) : null}\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'flex-start' }}>\n        <canvas ref={canvasRef} width={CANVAS_WIDTH} height={CANVAS_HEIGHT} style={{ border: '2px solid #fff', background: '#333' }} />\n        <div style={{ marginLeft: '20px', width: '200px' }}>\n          <h3>Leaderboard</h3>\n          {leaderboard.map((entry, i) => (\n            <div key={i}>{entry.name}: {entry.result} - ${entry.money}</div>\n          ))}\n        </div>\n      </div>\n      {phase === 'running' && hasBet && (\n        <button onClick={cashOut} style={{\n          position: 'fixed',\n          left: '20px',\n          top: '50%',\n          transform: 'translateY(-50%)',\n          padding: '10px 20px',\n          fontSize: '1em',\n          cursor: 'pointer',\n          background: '#28a745',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '5px',\n        }}>\n          Cash Out\n        </button>\n      )}\n      {phase === 'waiting' && !hasBet && userName && (\n        <button onClick={placeBet} style={{\n          padding: '10px 20px',\n          margin: '10px',\n          fontSize: '1em',\n          cursor: 'pointer',\n          background: '#007bff',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '5px',\n        }}>\n          Place Bet & Join\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default CrashGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}